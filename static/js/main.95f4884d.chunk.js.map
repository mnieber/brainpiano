{"version":3,"sources":["quiz/components/QuizFrame.tsx","utils/mathMod.ts","voicings/noteConstants.ts","keyboard/keyConstants.ts","quiz/utils/voicingTitleFromQuery.ts","voicings/components/VoicingTitle.tsx","groups/components/GroupsFrameTopPanel.tsx","groups/components/GroupsFrame.tsx","utils/components/ValuePicker.tsx","groups/components/GroupPicker.tsx","groups/components/GroupsFrameLeftPanel.tsx","utils/RST.ts","utils/components/Effect.tsx","utils/components/ResourceView.tsx","voicings/utils/playChord.ts","voicings/components/InversionSelector.tsx","keyboard/components/ClefModulationSelector.tsx","keyboard/components/ClefSelector.tsx","keyboard/noteColours.ts","keyboard/components/Marker.tsx","keyboard/components/Key.tsx","keyboard/components/Octave.tsx","keyboard/utils/noteValueToColour.ts","voicings/components/RandomChordSelector.tsx","keyboard/components/Keyboard.tsx","keyboard/components/ClefListView.tsx","keyboard/components/ClefListViewItem.tsx","voicings/parse.ts","io/components/IoMenu.tsx","quiz/components/QuizFrameTopPanel.tsx","quiz/components/QuizView.tsx","utils/ids.ts","utils/random.ts","voicings/utils/invertChord.ts","voicings/utils/voicingToChord.ts","quiz/utils/createQuery.ts","quiz/QuizState/facets/Inputs.ts","quiz/QuizState/facets/Outputs.ts","quiz/QuizState/index.ts","quiz/QuizState/policies/selectClefBasedOnPreselection.ts","voicings/voicingGroups.ts","quiz/components/QuizStateProvider.tsx","app/components/UrlRouter.tsx","app/components/App.tsx","groups/GroupsStore.ts","keyboard/PreselectionStore.ts","voicings/VoicingStore.ts","keyboard/ClefStore.ts","app/components/StoreProvider.tsx","app/AppStore.ts","app/policies/voicingStoreUsesSelectedClef.ts","app/components/useStore.ts","reportWebVitals.ts","index.tsx"],"names":["QuizFrame","observer","props","className","classnames","children","mathMod","m","p","isInteger","NaN","noteNameByValue","valueByNoteName","root","flat9","nine","ninth","flat3","third","fourth","eleven","eleventh","sharp4","flat5","sharp11","fifth","flat6","flat13","six","sixth","thirteen","thirteenth","flat7","seven","seventh","clefs","clefOffsets","clefLetters","whiteKeyIndexes","blackKeyIndexes","isWhiteKeyIndex","keyIndex","includes","octaveRootNoteValue","octaveIndex","noteValueToIndex","noteValue","voicingTitleFromQuery","query","noteIndex","inversion","voicing","chord","length","startNoteIdx","startNoteName","clef","name","VoicingTitle","label","GroupsFrameTopPanel","ValuePicker","isMulti","isCreatable","pickableValue","pickableValues","labelFromValue","others","toPickerValue","pickableVal","__isNew__","value","options","map","pickerProps","isNil","undefined","onKeyDown","e","picker","style","zIndex","GroupPicker","useDefaultProps","onChange","action","values","groupsSelection","ids","x","id","groups","items","GroupsFrameLeftPanel","RESET","f","useDeepCompareEffect","Fragment","UPDATING","ERRORED","UPDATED","loadingRS","type","updating_state","defaultRenderErrored","rsMap","update","then","getErrorMsg","result","catch","message","defaultRenderUpdating","renderErrored","renderUpdating","rs","renderUpdated","tryRenderUpdated","isErroredRS","isUpdatingRS","isResetRS","Error","catchAll","context","window","AudioContext","webkitAudioContext","synth","AudioSynth","InversionSelector","voicingStore","useStore","handleKeys","onKeyEvent","key","setInversion","quizState","forEach","note","playNote","ClefModulationSelector","preselectionStore","handleEventType","setIsSharpening","setIsFlattening","reset","ClefSelector","setClefLetter","noteColours","0","1","2","3","4","5","6","7","8","9","10","11","Marker","nrOfStripes","Math","floor","height","isStriped","flow","always","range","stripeIdx","nrBg","nrFilled","isFilled","y","fill","backgroundColour","width","strokeWidth","opacity","whiteKeyProps","markerHeight","blackKeyProps","whiteKeyX","i","fraction","blackKeyX","Key","isWhiteKey","index","keyProps","markerOffsetY","keyIndexes","indexOf","getKeyX","stroke","markerColour","markerIsStriped","Octave","concat","keys","add","harmonicColour","endsWith","colour","split","noteValueToColour","RandomChordSelector","pickRandomChord","Keyboard","clefStore","octaves","onClick","tabIndex","ClefListView","clefDivs","clefsSelection","onMouseDown","selectItem","itemId","isShift","isCtrl","noItems","ClefListViewItem","parseVoicing","data","console","log","parseVoicingGroup","voicings","cache","parseVoicingGroups","IoMenu","onSelect","eventKey","navigator","clipboard","writeText","JSON","stringify","open","readText","clipText","setGroups","parse","autoOpen","pullRight","Toggle","btnSize","btnStyle","Menu","divider","QuizFrameTopPanel","HelpButton","nextQuery","QuizView","React","useMemo","getIds","randomElement","random","size","invertChord","pos","times","constant","arr","maxNote","first","take","last","takeRight","minNote","abs","getInversionRange","minInversion","maxInversion","l","voicingToChord","rootNoteValue","keyOffset","createQuery","nrVoicings","sumBy","voicingIdx","groupIdx","count","group","L","inversionRange","filter","inversions","getRandomInversion","Inputs","input","Outputs","qsList","item","listToItemById","this","groupsDisplay","output","computed","QuizState","selection","Selection","highlight","Highlight","registerFacets","makeObservable","_setClefsCallbacks","_applyClefsPolicies","makeCtrObservable","_setGroupsCallbacks","_applyGroupsPolicies","cuf","handler","event","topic","details","clefLetter","isSharpening","isFlattening","setClef","signal","remove","Policies","addCleanUpFunctionToCtr","ctr","setCallbacks","handleSelectItem","selectionParams","FacetPolicies","Inputs_items","Outputs_display","policies","mapDataToFacet","getm","Facets","installPolicies","Outputs_itemById","cleanUpCtr","inputs","setVoicing","observable","facet","voicingGroups","QuizStateProvider","groupsStore","createState","state","setClefs","createCtr","updateCtr","reaction","fireImmediately","destroyCtr","destroy","getDefaultProps","outputs","clefsDisplay","clefsHighlight","groupsHighlight","history","createBrowserHistory","UrlRouter","path","App","GroupsStore","PreselectionStore","Signal","dispatch","cScale","VoicingStore","clamp","nrOfVoices","ClefStore","clefSharp","clefFlat","setClefSharp","setClefFlat","modulate","appStore","applyPolicies","StoreContext","createContext","store","useContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95f4884d.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react-lite';\n\nimport { QuizFrameTopPanel } from 'src/quiz/components';\n\nimport './QuizFrame.scss';\n\ntype PropsT = React.PropsWithChildren<{}>;\n\nexport const QuizFrame: React.FC<PropsT> = observer((props: PropsT) => {\n  return (\n    <div\n      className={classnames('QuizFrame flex flex-col')}\n    >\n      <QuizFrameTopPanel/>\n      <div\n        className={classnames('QuizFrame__MidSection flex flex-row')}\n      >\n        \n        {props.children}\n        \n      </div>\n      \n    </div>\n  );\n});","import { isInteger } from 'lodash/fp';\n\nexport const mathMod = (m: number, p: number) => {\n  if (!isInteger(m)) {\n    return NaN;\n  }\n  if (!isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return ((m % p) + p) % p;\n};\n","export const root = 0;\nexport const flat9 = 1;\nexport const ninth = 2;\nexport const sharp9 = 3;\nexport const flat3 = 3;\nexport const third = 4;\nexport const fourth = 5;\nexport const eleventh = 5;\nexport const sharp4 = 6;\nexport const sharp11 = 6;\nexport const flat5 = 6;\nexport const fifth = 7;\nexport const sharp5 = 8;\nexport const flat6 = 8;\nexport const flat13 = 8;\nexport const sixth = 9;\nexport const thirteenth = 9;\nexport const flat7 = 10;\nexport const seventh = 11;\n\nexport const noteNameByValue = {\n  '0': 'root',\n  '1': 'flat nine',\n  '2': 'nine',\n  '3': 'flat third',\n  '4': 'third',\n  '5': 'fourth/eleventh',\n  '6': 'tritone',\n  '7': 'fifth',\n  '8': 'flat thirteen',\n  '9': 'thirteenth',\n  '10': 'flat seven',\n  '11': 'seven',\n};\n\nexport const valueByNoteName = {\n  root: 0,\n  'flat nine': 1,\n  flat9: 1,\n  nine: 2,\n  ninth: 2,\n  'flat third': 3,\n  flat3: 3,\n  third: 4,\n  fourth: 5,\n  eleven: 5,\n  eleventh: 5,\n  sharp4: 6,\n  flat5: 6,\n  sharp11: 6,\n  'sharp fourth': 6,\n  'sharp eleventh': 6,\n  fifth: 7,\n  'flat thirteen': 8,\n  flat6: 8,\n  flat13: 8,\n  six: 9,\n  sixth: 9,\n  thirteen: 9,\n  thirteenth: 9,\n  flat7: 10,\n  'flat seven': 10,\n  seven: 11,\n  seventh: 11,\n};\n","import { includes } from 'lodash/fp';\nimport { mathMod } from 'src/utils/mathMod';\n\nexport const clefC = 'C';\nexport const clefCSharp = 'C#';\nexport const clefCFlat = 'Cb';\nexport const clefD = 'D';\nexport const clefDSharp = 'D#';\nexport const clefDFlat = 'Db';\nexport const clefE = 'E';\nexport const clefESharp = 'E#';\nexport const clefEFlat = 'Eb';\nexport const clefF = 'F';\nexport const clefFSharp = 'F#';\nexport const clefFFlat = 'Fb';\nexport const clefG = 'G';\nexport const clefGSharp = 'G#';\nexport const clefGFlat = 'Gb';\nexport const clefA = 'A';\nexport const clefASharp = 'A#';\nexport const clefAFlat = 'Ab';\nexport const clefB = 'B';\nexport const clefBSharp = 'B#';\nexport const clefBFlat = 'Bb';\n\nexport const clefs = [\n  'C',\n  'C#',\n  'D',\n  'Eb',\n  'E',\n  'F',\n  'F#',\n  'G',\n  'Ab',\n  'A',\n  'Bb',\n  'B',\n];\n\nexport const clefOffsets: { [key: string]: number } = {\n  [clefCFlat]: 11,\n  [clefC]: 0,\n  [clefCSharp]: 1,\n  [clefDFlat]: 1,\n  [clefD]: 2,\n  [clefDSharp]: 3,\n  [clefEFlat]: 3,\n  [clefE]: 4,\n  [clefESharp]: 5,\n  [clefFFlat]: 4,\n  [clefF]: 5,\n  [clefFSharp]: 6,\n  [clefGFlat]: 6,\n  [clefG]: 7,\n  [clefGSharp]: 8,\n  [clefAFlat]: 8,\n  [clefA]: 9,\n  [clefASharp]: 10,\n  [clefBFlat]: 10,\n  [clefB]: 11,\n  [clefBSharp]: 0,\n};\n\nexport const clefLetters = [clefC, clefD, clefE, clefF, clefG, clefA, clefB];\n\nexport const whiteKeyIndexes = [0, 2, 4, 5, 7, 9, 11];\nexport const blackKeyIndexes = [1, 3, 6, 8, 10];\n\nexport const isWhiteKeyIndex = (keyIndex: number) =>\n  includes(keyIndex, whiteKeyIndexes);\n\nexport const nrOfNotesInOctave = 12;\nexport const octaveRootNoteValue = (octaveIndex: number) =>\n  octaveIndex * nrOfNotesInOctave;\nexport const noteValueToIndex = (noteValue: number) =>\n  mathMod(noteValue, nrOfNotesInOctave);\n","import { QueryT } from 'src/quiz/types';\nimport { mathMod } from 'src/utils/mathMod';\nimport { noteNameByValue } from 'src/voicings/noteConstants';\nimport { noteValueToIndex, clefOffsets } from 'src/keyboard/keyConstants';\n\nexport const voicingTitleFromQuery = (query: QueryT) => {\n  const noteIndex = mathMod(query.inversion, query.voicing.chord.length);\n  const startNoteIdx = noteValueToIndex(query.voicing.chord[noteIndex]);\n  const startNoteName = (noteNameByValue as any)[startNoteIdx];\n\n  return `${query.clef} ${query.voicing.name} from ` + `${startNoteName}`;\n};\n","import { observer } from 'mobx-react-lite';\nimport 'src/keyboard/components/Keyboard.css';\nimport { voicingTitleFromQuery } from 'src/quiz/utils/voicingTitleFromQuery';\nimport { QueryT } from 'src/quiz/types';\n\nimport './VoicingTitle.scss';\n\ntype PropsT = {\n  query?: QueryT;\n  label?: string;\n};\n\nexport const VoicingTitle = observer((props: PropsT) => {\n  return (\n    <div className=\"VoicingTitle\">\n      {(props.label ?? '') +\n        (props.query ? voicingTitleFromQuery(props.query) : '')}\n    </div>\n  );\n});\n","import React from 'react';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react-lite';\n\nimport './GroupsFrameTopPanel.scss';\n\ntype PropsT = React.PropsWithChildren<{}>;\n\nexport const GroupsFrameTopPanel: React.FC<PropsT> = observer(() => {\n  return (\n    <div\n      className={classnames('GroupsFrameTopPanel')}\n    >\n    </div>\n  );\n});","import React from 'react';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react-lite';\n\nimport { GroupsFrameTopPanel } from 'src/groups/components';\nimport { GroupsFrameLeftPanel } from 'src/groups/components';\n\nimport './GroupsFrame.scss';\n\ntype PropsT = React.PropsWithChildren<{}>;\n\nexport const GroupsFrame: React.FC<PropsT> = observer((props: PropsT) => {\n  return (\n    <div\n      className={classnames('GroupsFrame flex flex-col')}\n    >\n      <GroupsFrameTopPanel/>\n      <div\n        className={classnames('GroupsFrame__MidSection flex flex-row')}\n      >\n        <GroupsFrameLeftPanel/>\n        {props.children}\n        \n      </div>\n      \n    </div>\n  );\n});","import Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { isNil } from 'lodash/fp';\nimport { observer } from 'mobx-react-lite';\n\nexport interface PickerValueT {\n  value: any;\n  label: string;\n  __isNew__?: boolean;\n}\n\ntype PropsT<ValueT> = {\n  isMulti: boolean;\n  isCreatable: boolean;\n  pickableValues: ValueT[];\n  pickableValue: ValueT;\n  labelFromValue: (value: any) => string;\n  [k: string]: any;\n};\n\nexport const ValuePicker = observer(\n  <ValueT, ConcretePropsT extends PropsT<ValueT>>(\n    props: ConcretePropsT\n  ): JSX.Element => {\n    const {\n      isMulti,\n      isCreatable,\n      pickableValue,\n      pickableValues,\n      labelFromValue,\n      ...others\n    } = props;\n\n    const toPickerValue = (pickableVal: any) => {\n      return pickableVal.__isNew__\n        ? pickableVal\n        : {\n            value: pickableVal,\n            label: labelFromValue(pickableVal),\n          };\n    };\n\n    const options = pickableValues.map(toPickerValue);\n\n    const pickerProps = {\n      isMulti: isMulti,\n      options,\n      value: isNil(pickableValue)\n        ? undefined\n        : isMulti\n        ? (pickableValue as any).map(toPickerValue)\n        : toPickerValue(pickableValue),\n      onKeyDown: (e: any) => {\n        if (others.onKeyDown) {\n          others.onKeyDown(e);\n        }\n      },\n      ...others,\n    };\n\n    const picker = isCreatable ? (\n      <CreatableSelect {...pickerProps} />\n    ) : (\n      <Select {...pickerProps} />\n    );\n\n    return <div style={{ zIndex: others.zIndex }}>{picker}</div>;\n  }\n);\n","import classnames from 'classnames';\nimport { action } from 'mobx';\nimport { observer } from 'mobx-react-lite';\nimport { useDefaultProps, FC } from 'react-default-props-context';\nimport { Selection } from 'skandha-facets/Selection';\n\nimport { PickerValueT, ValuePicker } from 'src/utils/components/ValuePicker';\nimport { GroupT } from 'src/groups/types';\n\nimport './GroupPicker.scss';\n\ntype PropsT = {\n  className?: any;\n};\n\ntype DefaultPropsT = {\n  groups: GroupT[];\n  groupsSelection: Selection;\n};\n\nexport const GroupPicker: FC<PropsT, DefaultPropsT> = observer((p: PropsT) => {\n  const props = useDefaultProps<PropsT, DefaultPropsT>(p);\n\n  const onChange = action((value: PickerValueT) => {\n    const values: Array<any> = (value as any) ?? [];\n    props.groupsSelection.ids = values.map((x) => x.value.id);\n  });\n\n  return (\n    <div className={classnames('GroupPicker', props.className)}>\n      <ValuePicker\n        isMulti={true}\n        isCreatable={false}\n        pickableValues={props.groups}\n        labelFromValue={(x: any) => x.name}\n        pickableValue={props.groupsSelection.items}\n        onChange={onChange}\n      />\n    </div>\n  );\n});\n","import React from 'react';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react-lite';\n\nimport './GroupsFrameLeftPanel.scss';\n\ntype PropsT = React.PropsWithChildren<{}>;\n\nexport const GroupsFrameLeftPanel: React.FC<PropsT> = observer(() => {\n  return (\n    <div\n      className={classnames('GroupsFrameLeftPanel')}\n    >\n    </div>\n  );\n});","import { action } from \"mobx\";\n\nconst RESET = \"RESET\";\nconst UPDATING = \"UPDATING\";\nconst ERRORED = \"ERRORED\";\nconst UPDATED = \"UPDATED\";\nconst LOADING = \"LOADING\";\n\nexport type ResetRST = {\n  type: typeof RESET;\n};\n\nexport const resetRS = (): ResetRST => ({ type: RESET });\n\nexport const isResetRS = <UpdatingT>(rs: RST<UpdatingT>): rs is ResetRST =>\n  rs.type === RESET;\n\nexport type UpdatingRST<UpdatingT> = {\n  type: typeof UPDATING;\n  updating_state: UpdatingT;\n};\n\nexport const updatingRS = <UpdatingT>(\n  updating_state: UpdatingT\n): UpdatingRST<UpdatingT> => ({\n  type: UPDATING,\n  updating_state,\n});\n\nexport const isUpdatingRS = <UpdatingT>(\n  rs: RST<UpdatingT>\n): rs is UpdatingRST<UpdatingT> => rs.type === UPDATING;\n\nexport type ErroredRST = {\n  type: typeof ERRORED;\n  message: string;\n};\n\nexport const erroredRS = (message: string): ErroredRST => ({\n  type: ERRORED,\n  message,\n});\n\nexport const isErroredRS = <UpdatingT>(rs: RST<UpdatingT>): rs is ErroredRST =>\n  rs.type === ERRORED;\n\nexport type UpdatedRST = {\n  type: typeof UPDATED;\n};\n\nexport const updatedRS = (): UpdatedRST => ({\n  type: UPDATED,\n});\n\nexport const isUpdatedRS = <UpdatingT>(rs: RST<UpdatingT>): rs is UpdatedRST =>\n  rs.type === UPDATED;\n\nexport type LoadingT = {\n  type: typeof LOADING;\n};\n\nexport const loadingRS = (): UpdatingRST<LoadingT> =>\n  updatingRS({\n    type: LOADING,\n  });\n\nexport type RST<UpdatingT = LoadingT> =\n  | ResetRST\n  | UpdatingRST<UpdatingT>\n  | ErroredRST\n  | UpdatedRST;\n\nexport const updateRes = action(\n  (\n    rsMap: { [k: string]: any },\n    id: string,\n    update: Function,\n    then: Function,\n    getErrorMsg?: Function\n  ) => {\n    rsMap[id] = loadingRS();\n    return update()\n      .then(\n        action((result: any) => {\n          then(result);\n          rsMap[id] = updatedRS();\n        })\n      )\n      .catch(\n        action((e: any) => {\n          rsMap[id] = erroredRS(\n            getErrorMsg ? getErrorMsg(e) : `Could not load ${id}`\n          );\n        })\n      );\n  }\n);\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\ntype EffectWithoutArgsPropsT = {\n  f: () => void;\n};\n\nexport const EffectWithoutArgs: (\n  props: EffectWithoutArgsPropsT\n) => React.ReactElement = observer(({ f }) => {\n  useDeepCompareEffect(() => {\n    const cleanUpFunction = f();\n    return cleanUpFunction;\n  }, [f]);\n  return <React.Fragment />;\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport {\n  RST,\n  isResetRS,\n  isUpdatingRS,\n  isUpdatedRS,\n  isErroredRS,\n} from 'src/utils/RST';\n\ntype PropsT<UpdatingT> = {\n  rs: RST<UpdatingT>;\n  renderUpdated: () => JSX.Element;\n  renderUpdating?: (updating_state: UpdatingT) => JSX.Element;\n  renderErrored?: (message: string) => JSX.Element;\n};\n\n// TODO better default renders\nconst defaultRenderErrored = (message: string) => {\n  return <div>Error{message !== undefined && `: ${message}`}</div>;\n};\nconst defaultRenderUpdating = () => {\n  return <div>Loading...</div>;\n};\n\nexport const ResourceView = observer(\n  <UpdatingT,>(props: PropsT<UpdatingT>): JSX.Element => {\n    const renderErrored = props.renderErrored ?? defaultRenderErrored;\n    const renderUpdating = props.renderUpdating ?? defaultRenderUpdating;\n\n    const tryRenderUpdated = () => {\n      try {\n        const result = props.renderUpdated();\n        return result;\n      } catch (e) {\n        return renderErrored(e.message);\n      }\n    };\n\n    const catchAll = () => {\n      throw Error(`Received unrecognized resource state ${props.rs}`);\n    };\n\n    const renderReset = () => {\n      return <React.Fragment />;\n    };\n\n    return isUpdatedRS(props.rs)\n      ? tryRenderUpdated()\n      : isErroredRS(props.rs)\n      ? renderErrored(props.rs.message)\n      : isUpdatingRS(props.rs)\n      ? renderUpdating(props.rs.updating_state)\n      : isResetRS(props.rs)\n      ? renderReset()\n      : catchAll();\n  }\n);\n","import { ChordT } from 'src/voicings/types';\nimport { ClefT } from 'src/keyboard/types';\nimport AudioSynth from 'audiosynth';\nimport { forEach } from 'lodash/fp';\nimport { clefOffsets } from 'src/keyboard/keyConstants';\n\nvar AudioContext = window.AudioContext || (window as any).webkitAudioContext;\n\nvar context = new AudioContext();\nvar synth = new AudioSynth(context);\n\nexport const playChord = (chord: ChordT, clef: ClefT) => {\n  forEach((note) => synth.playNote(note + 48, 1.0, 1.0, 0), chord);\n  synth.playNote(clefOffsets[clef] + 36, 1.0, 1.0, 0);\n};\n","import { useDefaultProps, FC } from 'react-default-props-context';\nimport { observer } from 'mobx-react-lite';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { useStore } from 'src/app/components';\nimport { playChord } from 'src/voicings/utils/playChord';\nimport { QuizState } from 'src/quiz/QuizState';\n\ntype PropsT = React.PropsWithChildren<{}>;\n\ntype DefaultPropsT = {\n  quizState: QuizState;\n};\n\nexport const InversionSelector: FC<PropsT, DefaultPropsT> = observer(\n  (p: PropsT) => {\n    const props = useDefaultProps<PropsT, DefaultPropsT>(p);\n    const { voicingStore } = useStore();\n    return (\n      <KeyboardEventHandler\n        handleKeys={['ctrl+left', 'ctrl+right']}\n        onKeyEvent={(key: string, e: any) => {\n          if (key === 'ctrl+right') {\n            voicingStore.setInversion(voicingStore.inversion + 1);\n            if (props.quizState.query) {\n              props.quizState.query.inversion = voicingStore.inversion;\n            }\n          }\n          if (key === 'ctrl+left') {\n            voicingStore.setInversion(voicingStore.inversion - 1);\n            if (props.quizState.query) {\n              props.quizState.query.inversion = voicingStore.inversion;\n            }\n          }\n        }}\n      >\n        <KeyboardEventHandler\n          handleKeys={['p']}\n          onKeyEvent={(key: string, e: any) => {\n            playChord(voicingStore.chord, voicingStore.clef);\n          }}\n        >\n          {props.children}\n        </KeyboardEventHandler>\n      </KeyboardEventHandler>\n    );\n  }\n);\n","import { observer } from 'mobx-react-lite';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { useStore } from 'src/app/components';\n\nexport const ClefModulationSelector = observer(({ children }) => {\n  const { preselectionStore } = useStore();\n\n  return (\n    <KeyboardEventHandler\n      handleKeys={['up', 'down']}\n      handleEventType=\"keydown\"\n      onKeyEvent={(key: string, e: any) => {\n        preselectionStore.setIsSharpening(key === 'up');\n        preselectionStore.setIsFlattening(key === 'down');\n      }}\n    >\n      <KeyboardEventHandler\n        handleKeys={['up', 'down']}\n        handleEventType=\"keyup\"\n        onKeyEvent={(key: string, e: any) => {\n          preselectionStore.reset();\n        }}\n      >\n        {children}\n      </KeyboardEventHandler>\n    </KeyboardEventHandler>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { useStore } from 'src/app/components';\nimport { clefLetters } from 'src/keyboard/keyConstants';\n\nexport const ClefSelector = observer(({ children }) => {\n  const { preselectionStore } = useStore();\n\n  return (\n    <KeyboardEventHandler\n      handleKeys={clefLetters}\n      handleEventType=\"keydown\"\n      onKeyEvent={(key: string, e: any) => {\n        preselectionStore.setClefLetter(key);\n      }}\n    >\n      <KeyboardEventHandler\n        handleKeys={clefLetters}\n        handleEventType=\"keyup\"\n        onKeyEvent={(key: string, e: any) => {\n          preselectionStore.reset();\n        }}\n      >\n        {children}\n      </KeyboardEventHandler>\n    </KeyboardEventHandler>\n  );\n});\n","export const noteColours: { [key: number]: string } = {\n  0: '#aaaaaa',\n  1: '#fa9835-striped',\n  2: '#fa9835', // orange\n  3: '#40d530-striped',\n  4: '#40d530', // green\n  5: '#fee449', // yellow\n  6: '#f53311-striped',\n  7: '#f53311', // red\n  8: '#38baf2-striped',\n  9: '#38baf2', // blue\n  10: '#ff99ff-striped',\n  11: '#ff99ff', // violet\n};\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { always, map, flow, range } from 'lodash/fp';\nimport { Rect } from 'react-konva';\n\ntype PropsT = {\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n  fill: any;\n  backgroundColour: any;\n  isStriped: boolean;\n};\n\nexport const Marker: React.FC<PropsT> = observer((props: PropsT) => {\n  const filledStripeHeight = 5;\n  const bgStripeHeight = 3.5;\n  const nrOfStripes = Math.floor(\n    props.height / (0.5 * (filledStripeHeight + bgStripeHeight))\n  );\n\n  return props.isStriped\n    ? (flow(\n        always(range(0, nrOfStripes)),\n        map((stripeIdx) => {\n          const nrBg = Math.floor(stripeIdx / 2);\n          const nrFilled = stripeIdx - nrBg;\n          const isFilled = stripeIdx % 2 == 0;\n          const y =\n            props.y + nrFilled * filledStripeHeight + nrBg * bgStripeHeight;\n          const height = isFilled ? filledStripeHeight : bgStripeHeight;\n\n          return (\n            <Rect\n              key={stripeIdx}\n              x={props.x + 1}\n              y={y}\n              fill={isFilled ? props.fill : props.backgroundColour}\n              width={props.width - 2}\n              height={height}\n              strokeWidth={0}\n              opacity={1}\n            />\n          );\n        })\n      )() as any)\n    : ([\n        <Rect\n          key={0}\n          x={props.x + 1}\n          y={props.y}\n          fill={props.fill}\n          width={props.width - 2}\n          height={props.height}\n          strokeWidth={0}\n          opacity={1}\n        />,\n      ] as any);\n});\n","import { always, indexOf, map, flow, range } from 'lodash/fp';\nimport React from 'react';\nimport { Rect } from 'react-konva';\nimport { observer } from 'mobx-react-lite';\n\nimport {\n  blackKeyIndexes,\n  isWhiteKeyIndex,\n  whiteKeyIndexes,\n} from 'src/keyboard/keyConstants';\nimport { Marker } from 'src/keyboard/components/Marker';\n\nconst whiteKeyProps = {\n  width: 50,\n  height: 250,\n  fill: '#FFFFFF',\n  markerHeight: 56,\n};\n\nconst blackKeyProps = {\n  width: 25,\n  height: 160,\n  fill: '#444444',\n  markerHeight: 100,\n};\n\nconst whiteKeyX = flow(\n  always(range(0, 7)),\n  map((i) => i * whiteKeyProps.width)\n)();\n\nconst fraction = (x: number) => x * blackKeyProps.width;\nconst blackKeyX = [\n  whiteKeyX[1] - fraction(0.66),\n  whiteKeyX[2] - fraction(0.33),\n  whiteKeyX[4] - fraction(0.7),\n  whiteKeyX[5] - fraction(0.5),\n  whiteKeyX[6] - fraction(0.3),\n];\n\nconst getKeyX = (keyIndex: number) => {\n  const isWhiteKey = isWhiteKeyIndex(keyIndex);\n  const keyX = isWhiteKey ? whiteKeyX : blackKeyX;\n  const keyIndexes = isWhiteKey ? whiteKeyIndexes : blackKeyIndexes;\n  return keyX[indexOf(keyIndex, keyIndexes)];\n};\n\ntype PropsT = {\n  index: number;\n  octaveIndex: number;\n  markerColour?: string;\n  markerIsStriped: boolean;\n};\n\nexport const Key = observer((props: PropsT) => {\n  const isWhiteKey = isWhiteKeyIndex(props.index);\n  const keyProps = isWhiteKey ? whiteKeyProps : blackKeyProps;\n\n  const offsetY = 0;\n  const markerOffsetY = isWhiteKey ? 3 : 2;\n  const offsetX = props.octaveIndex * 7 * whiteKeyProps.width;\n\n  const x = offsetX + getKeyX(props.index);\n\n  return (\n    <React.Fragment>\n      <Rect\n        x={x}\n        y={offsetY}\n        fill={keyProps.fill}\n        stroke=\"#000000\"\n        opacity={1}\n        width={keyProps.width}\n        height={keyProps.height}\n      />\n      <Marker\n        x={x + 2}\n        y={offsetY + keyProps.height - keyProps.markerHeight - markerOffsetY}\n        height={keyProps.markerHeight}\n        width={keyProps.width - 4}\n        fill={props.markerColour}\n        isStriped={props.markerIsStriped}\n        backgroundColour={keyProps.fill}\n      />\n    </React.Fragment>\n  );\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { always, concat, map, flow, add } from 'lodash/fp';\nimport { Layer } from 'react-konva';\n\nimport {\n  blackKeyIndexes,\n  noteValueToIndex,\n  octaveRootNoteValue,\n  whiteKeyIndexes,\n} from 'src/keyboard/keyConstants';\nimport { noteValueToColour } from 'src/keyboard/utils/noteValueToColour';\nimport { Key } from 'src/keyboard/components/Key';\n\ntype PropsT = {\n  index: number;\n  clef: string;\n  chord: any;\n};\n\nexport const Octave = observer((props: PropsT) => {\n  const keyIndexes = concat(whiteKeyIndexes, blackKeyIndexes);\n  const keys = flow(\n    always(keyIndexes),\n    map(add(octaveRootNoteValue(props.index))),\n    map((noteValue) => {\n      const keyIndex = noteValueToIndex(noteValue);\n      const { colour, isStriped } = noteValueToColour(\n        noteValue,\n        props.clef,\n        props.chord\n      );\n      return (\n        <Key\n          key={noteValue}\n          index={keyIndex}\n          octaveIndex={props.index}\n          markerColour={colour}\n          markerIsStriped={isStriped}\n        />\n      );\n    })\n  )();\n  return <Layer>{keys}</Layer>;\n});\n","import { includes, split } from 'lodash/fp';\n\nimport { noteColours } from 'src/keyboard/noteColours';\nimport { noteValueToIndex, clefOffsets } from 'src/keyboard/keyConstants';\nimport { ChordT, NoteT } from 'src/voicings/types';\n\nexport function noteValueToColour(\n  noteValue: NoteT,\n  clef: string,\n  chord: ChordT\n) {\n  const harmonicColour = includes(noteValue, chord)\n    ? noteColours[noteValueToIndex(noteValue - clefOffsets[clef])]\n    : undefined;\n\n  const isStriped = !!(harmonicColour && harmonicColour.endsWith('-striped'));\n  const colour = isStriped\n    ? split('-striped', harmonicColour)[0]\n    : harmonicColour;\n\n  return { colour, isStriped };\n}\n","import { observer } from 'mobx-react-lite';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { useDefaultProps, FC } from 'react-default-props-context';\nimport { QuizState } from 'src/quiz/QuizState';\n\ntype PropsT = React.PropsWithChildren<{}>;\n\ntype DefaultPropsT = {\n  quizState: QuizState;\n};\n\nexport const RandomChordSelector: FC<PropsT, DefaultPropsT> = observer(\n  (p: PropsT) => {\n    const props = useDefaultProps<PropsT, DefaultPropsT>(p);\n\n    return (\n      <KeyboardEventHandler\n        handleKeys={['space', 'enter']}\n        onKeyEvent={(key: string, e: any) => {\n          props.quizState.pickRandomChord();\n        }}\n      >\n        {props.children}\n      </KeyboardEventHandler>\n    );\n  }\n);\n","import { useDefaultProps, FC } from 'react-default-props-context';\nimport { always, flow, map, range } from 'lodash/fp';\nimport { observer } from 'mobx-react-lite';\nimport { Stage } from 'react-konva';\nimport { useStore } from 'src/app/components';\nimport { InversionSelector } from 'src/voicings/components/InversionSelector';\nimport 'src/keyboard/components/Keyboard.css';\nimport { ClefModulationSelector } from 'src/keyboard/components/ClefModulationSelector';\nimport { ClefSelector } from 'src/keyboard/components/ClefSelector';\nimport { Octave } from 'src/keyboard/components/Octave';\nimport { RandomChordSelector } from 'src/voicings/components/RandomChordSelector';\n\ntype PropsT = {\n  onClick: (event: any) => void;\n};\n\ntype DefaultPropsT = {};\n\nexport const Keyboard: FC<PropsT, DefaultPropsT> = observer((p: PropsT) => {\n  const props = useDefaultProps<PropsT, DefaultPropsT>(p);\n\n  const { voicingStore, clefStore } = useStore();\n\n  const octaves = flow(\n    always(range(0, 4)),\n    map((i) => (\n      <Octave\n        key={i}\n        index={i}\n        clef={clefStore.clef}\n        chord={voicingStore.chord}\n      />\n    ))\n  )();\n\n  return (\n    <div className=\"Keyboard__frame\" onClick={props.onClick}>\n      <RandomChordSelector>\n        <ClefSelector>\n          <ClefModulationSelector>\n            <InversionSelector>\n              <div tabIndex={0}>\n                <Stage width={1400} height={250}>\n                  {octaves}\n                </Stage>\n              </div>\n            </InversionSelector>\n          </ClefModulationSelector>\n        </ClefSelector>\n      </RandomChordSelector>\n    </div>\n  );\n});\n","import classnames from 'classnames';\nimport { always, flow, map } from 'lodash/fp';\nimport { observer } from 'mobx-react-lite';\nimport { useDefaultProps, FC } from 'react-default-props-context';\nimport { ClefListViewItem } from 'src/keyboard/components';\nimport { ClefT } from 'src/keyboard/types';\nimport { Selection } from 'skandha-facets/Selection';\n\nimport './ClefListView.scss';\n\ntype PropsT = {\n  className?: any;\n};\n\ntype DefaultPropsT = {\n  clefs: ClefT[];\n  clefsSelection: Selection;\n};\n\nexport const ClefListView: FC<PropsT, DefaultPropsT> = observer((p: PropsT) => {\n  const props = useDefaultProps<PropsT, DefaultPropsT>(p);\n\n  const clefDivs = flow(\n    always(props.clefs),\n    map((x) => (\n      <ClefListViewItem\n        key={x}\n        clef={x}\n        className={classnames(\n          {\n            'ClefListViewItem--selected': props.clefsSelection.ids.includes(x),\n          },\n          props.className\n        )}\n        onMouseDown={(e: any) => {\n          props.clefsSelection.selectItem({\n            itemId: x,\n            isShift: false,\n            isCtrl: true,\n          });\n        }}\n      />\n    ))\n  )();\n\n  const noItems = <h2>There are no clefs</h2>;\n\n  return (\n    <div className=\"ClefListView flex flex-row w-full\">\n      {clefDivs.length && clefDivs}\n      {!clefDivs.length && noItems}\n    </div>\n  );\n});\n","import React from 'react';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react-lite';\nimport { ClefT } from 'src/keyboard/types';\n\nimport './ClefListViewItem.scss';\n\nexport type PropsT = {\n  clef: ClefT;\n  onMouseDown: (event: any) => void;\n  className?: any;\n};\n\nexport const ClefListViewItem: React.FC<PropsT> = observer((props: PropsT) => {\n  return (\n    <div\n      className={classnames('ClefListViewItem flex-1', props.className)}\n      onMouseDown={props.onMouseDown}\n    >\n      {props.clef}\n    </div>\n  );\n});\n","import { valueByNoteName } from 'src/voicings/noteConstants';\nimport { map } from 'lodash/fp';\n\nexport const parseVoicing = (data: any) => {\n  const voicing = {\n    ...data,\n    chord: map((x: string) => {\n      const noteValue = (valueByNoteName as any)[x as any];\n      if (noteValue === undefined) {\n        console.log(`Error: unknown note ${x}`);\n      }\n      return noteValue;\n    }, data['chord']),\n  };\n\n  for (let i = 1; i < voicing.chord.length; ++i) {\n    while (voicing.chord[i] <= voicing.chord[i - 1]) {\n      voicing.chord[i] += 12;\n    }\n  }\n\n  return voicing;\n};\n\nconst parseVoicingGroup = (data: any) => {\n  return {\n    ...data,\n    voicings: map(parseVoicing, data['voicings']),\n  };\n};\n\nexport const cache = {\n  data: null,\n};\n\nexport const parseVoicingGroups = (data: any) => {\n  cache.data = data;\n  return map(parseVoicingGroup, data);\n};\n","import { observer } from 'mobx-react-lite';\nimport { useDefaultProps, FC } from 'react-default-props-context';\nimport Dropdown, { MenuItem } from '@trendmicro/react-dropdown';\nimport { QuizState } from 'src/quiz/QuizState';\nimport { cache, parseVoicingGroups } from 'src/voicings/parse';\n\nimport '@trendmicro/react-buttons/dist/react-buttons.css';\nimport '@trendmicro/react-dropdown/dist/react-dropdown.css';\n\nimport './IoMenu.scss';\n\nconst twitterUrl = `https://twitter.com/intent/tweet?url=www.brainpiano.ai&hashtags=BrainPiano`;\n\ntype PropsT = {};\n\ntype DefaultPropsT = {\n  quizState: QuizState;\n};\n\nexport const IoMenu: FC<PropsT, DefaultPropsT> = observer((p: PropsT) => {\n  const props = useDefaultProps<PropsT, DefaultPropsT>(p);\n\n  return (\n    <Dropdown\n      onSelect={(eventKey: any) => {\n        if (eventKey === 1) {\n          navigator.clipboard.writeText(JSON.stringify(cache.data, null, 2));\n        }\n        if (eventKey === 2) {\n          window.open(twitterUrl);\n        }\n        if (eventKey === 3) {\n          navigator.clipboard.readText().then((clipText) => {\n            debugger;\n            props.quizState.setGroups(parseVoicingGroups(JSON.parse(clipText)));\n          });\n        }\n      }}\n      autoOpen={true}\n      pullRight={true}\n    >\n      <Dropdown.Toggle btnSize=\"lg\" btnStyle=\"flat\">\n        IO\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <MenuItem eventKey={1}>Export</MenuItem>\n        <MenuItem divider />\n        <MenuItem eventKey={2}>Tweet</MenuItem>\n        <MenuItem divider />\n        <MenuItem eventKey={3}>Import</MenuItem>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n});\n","import React from 'react';\nimport { useDefaultProps, FC } from 'react-default-props-context';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react-lite';\nimport { VoicingTitle } from 'src/voicings/components/VoicingTitle';\nimport { GroupPicker } from 'src/groups/components';\nimport { ClefListView } from 'src/keyboard/components';\nimport { QuizState } from 'src/quiz/QuizState';\nimport { IoMenu } from 'src/io/components';\n\nimport './QuizFrameTopPanel.scss';\n\ntype PropsT = React.PropsWithChildren<{}>;\n\ntype DefaultPropsT = {\n  quizState: QuizState;\n};\n\nexport const QuizFrameTopPanel: FC<PropsT, DefaultPropsT> = observer(\n  (p: PropsT) => {\n    const props = useDefaultProps<PropsT, DefaultPropsT>(p);\n    const HelpButton = (\n      <button\n        onClick={() =>\n          window.open('https://github.com/mnieber/brainpiano#brainpiano')\n        }\n      >\n        Help\n      </button>\n    );\n\n    return (\n      <div className={classnames('QuizFrameTopPanel mb-4')}>\n        <div className=\"QuizFrameTopPanel__firstRow mb4 flex flex-row justify-between\">\n          <VoicingTitle query={props.quizState.query} />\n          {HelpButton}\n          <VoicingTitle\n            label={\n              props.quizState.nextQuery ? 'Next: ' : 'Welcome to BrainPiano!'\n            }\n            query={props.quizState.nextQuery}\n          />\n        </div>\n        <GroupPicker className=\"flex-1\" />\n        <div className=\"flex flex-row justify-between mt-2\">\n          <ClefListView className=\"flex-1\" />\n          <IoMenu />\n        </div>\n      </div>\n    );\n  }\n);\n","import React from 'react';\nimport { useDefaultProps, FC } from 'react-default-props-context';\nimport { observer } from 'mobx-react-lite';\nimport { Keyboard } from 'src/keyboard/components/Keyboard';\nimport { QuizFrame } from 'src/quiz/components';\nimport { QuizState } from 'src/quiz/QuizState';\n\ntype PropsT = {};\n\ntype DefaultPropsT = {\n  quizState: QuizState;\n};\n\nexport const QuizView: FC<PropsT, DefaultPropsT> = observer((p: PropsT) => {\n  const props = useDefaultProps<PropsT, DefaultPropsT>(p);\n\n  const onClick = React.useMemo(() => () => props.quizState.pickRandomChord(), [\n    props.quizState,\n  ]);\n  return (\n    <QuizFrame>\n      <Keyboard onClick={onClick} />\n    </QuizFrame>\n  );\n});\n","export function listToItemById(qsList: Array<any>, key: string = 'id') {\n  const result: any = {};\n  qsList.forEach((item) => {\n    result[item[key]] = item;\n  });\n  return result;\n}\n\nexport function getIds(x: Array<any>): Array<string> {\n  return x.map((x) => x.id);\n}\n","import { size } from 'lodash/fp';\n\nexport const randomElement = (items: Array<any>) =>\n  items[Math.floor(Math.random() * size(items))];\n","import {\n  always,\n  concat,\n  size,\n  flow,\n  times,\n  constant,\n  take,\n  takeRight,\n} from 'lodash/fp';\nimport { ChordT } from 'src/voicings/types';\n\nexport const invertChord = (chord: ChordT, pos: number) => {\n  function rotate(arr: ChordT) {\n    const maxNote = arr[arr.length - 1];\n    let first = take(1, arr);\n    const last = takeRight(size(arr) - 1, arr);\n    while (first[0] <= maxNote) {\n      first[0] += 12;\n    }\n    return concat(last, first);\n  }\n\n  function rotateBack(arr: ChordT) {\n    const minNote = arr[0];\n    let last = takeRight(1, arr);\n    const first = take(size(arr) - 1, arr);\n    while (last[0] >= minNote) {\n      last[0] -= 12;\n    }\n    return concat(last, first);\n  }\n\n  const result =\n    pos === 0\n      ? chord\n      : pos > 0\n      ? flow(always(chord), ...times(constant(rotate), pos))()\n      : flow(always(chord), ...times(constant(rotateBack), Math.abs(pos)))();\n  return result;\n};\n\nexport const getInversionRange = (chord: ChordT) => {\n  const topC = 48;\n  let minInversion = 0;\n  let maxInversion = 0;\n  const l = chord.length;\n\n  while (invertChord(chord, maxInversion + 1)[l - 1] < topC) {\n    maxInversion += 1;\n  }\n\n  while (invertChord(chord, minInversion - 1)[0] >= 0) {\n    minInversion -= 1;\n  }\n\n  return [minInversion, maxInversion];\n};\n","import { add, always, map, flow } from 'lodash/fp';\n\nimport { octaveRootNoteValue, clefOffsets } from 'src/keyboard/keyConstants';\nimport { VoicingT } from 'src/voicings/types';\n\nexport const voicingToChord = (\n  voicing: VoicingT,\n  clef: string,\n  octaveIndex: number\n) => {\n  let rootNoteValue = octaveRootNoteValue(octaveIndex);\n  const keyOffset = clefOffsets[clef];\n\n  const result = flow(\n    //\n    always(voicing.chord),\n    map(add(rootNoteValue + keyOffset))\n  )();\n  return result;\n};\n","import { range, sumBy } from 'lodash/fp';\nimport { randomElement } from 'src/utils/random';\nimport { ClefT } from 'src/keyboard/types';\nimport { GroupT } from 'src/groups/types';\nimport { VoicingT } from 'src/voicings/types';\nimport { getInversionRange } from 'src/voicings/utils/invertChord';\nimport { QueryT } from 'src/quiz/types';\nimport { voicingToChord } from 'src/voicings/utils/voicingToChord';\nimport { mathMod } from 'src/utils/mathMod';\n\nconst getRandomInversion = (voicing: VoicingT, clef: ClefT) => {\n  const L = voicing.chord.length;\n\n  const [minInversion, maxInversion] = getInversionRange(\n    voicingToChord(voicing, clef, 1)\n  );\n  const inversionRange = range(minInversion, maxInversion + 1).filter((x) => {\n    return voicing.inversions[mathMod(x, L)] !== false;\n  });\n  if (inversionRange.length === 0) {\n    return 0;\n  }\n  let inversion = randomElement(inversionRange);\n\n  // Try to bring inversion closer to zero using steps of voicing.chord.length inversions\n  // (which means its the same inversion, just at a different place on the keyboard)\n  while (\n    inversion + L <= maxInversion &&\n    Math.abs(inversion) > Math.abs(inversion + L)\n  ) {\n    inversion += L;\n  }\n  while (\n    inversion - L >= minInversion &&\n    Math.abs(inversion) > Math.abs(inversion - L)\n  ) {\n    inversion -= L;\n  }\n  return inversion;\n};\n\nexport const createQuery = (clefs: ClefT[], groups: GroupT[]): QueryT => {\n  const clef = randomElement(clefs);\n  const nrVoicings = sumBy((x: GroupT) => x.voicings.length)(groups);\n  const voicingIdx = Math.floor(Math.random() * nrVoicings);\n\n  let groupIdx = 0;\n  let count = groups[0].voicings.length;\n  while (voicingIdx >= count) {\n    groupIdx += 1;\n    count += groups[groupIdx].voicings.length;\n  }\n\n  const group = groups[groupIdx];\n  const voicing = group.voicings[voicingIdx - (count - group.voicings.length)];\n  const inversion = getRandomInversion(voicing, clef);\n\n  return {\n    clef,\n    group,\n    voicing,\n    inversion,\n  };\n};\n","import { ClefT } from 'src/keyboard/types';\nimport { GroupT } from 'src/groups/types';\nimport { input } from 'skandha';\n\nexport class Inputs {\n  @input groups: Array<GroupT> = [];\n  @input clefs: Array<ClefT> = [];\n}\n","import { computed } from 'mobx';\nimport { GroupT, GroupByIdT } from 'src/groups/types';\nimport { listToItemById } from 'src/utils/ids';\nimport { output } from 'skandha';\nimport { ClefT } from 'src/keyboard/types';\n\nexport class Outputs {\n  @output clefsDisplay: Array<ClefT> = [];\n  @output groupsDisplay: Array<GroupT> = [];\n\n  @computed get groupById(): GroupByIdT {\n    return listToItemById(this.groupsDisplay);\n  }\n}\n","import { setCallbacks } from 'aspiration';\nimport { action, observable, makeObservable } from 'mobx';\nimport {\n  addCleanUpFunctionToCtr,\n  facet,\n  getm,\n  cleanUpCtr,\n  mapDataToFacet,\n  installPolicies,\n  registerFacets,\n  ClassMemberT as CMT,\n} from 'skandha';\nimport { makeCtrObservable } from 'skandha-mobx';\nimport { getIds } from 'src/utils/ids';\nimport * as Facets from 'skandha-facets';\nimport * as Policies from 'src/quiz/QuizState/policies';\nimport * as FacetPolicies from 'skandha-facets/policies';\nimport {\n  Selection,\n  SelectionCbs,\n  handleSelectItem,\n} from 'skandha-facets/Selection';\nimport { Highlight, HighlightCbs } from 'skandha-facets/Highlight';\nimport { createQuery } from 'src/quiz/utils/createQuery';\nimport { PreselectionStore } from 'src/keyboard/PreselectionStore';\n\nimport { QueryT } from 'src/quiz/types';\nimport { GroupsStore } from 'src/groups/GroupsStore';\nimport { VoicingStore } from 'src/voicings/VoicingStore';\nimport { ClefStore } from 'src/keyboard/ClefStore';\nimport { Inputs } from 'src/quiz/QuizState/facets/Inputs';\nimport { Outputs } from 'src/quiz/QuizState/facets/Outputs';\nimport { ClefT } from 'src/keyboard/types';\nimport { GroupT } from 'src/groups/types';\n\ntype PropsT = {\n  clefStore: ClefStore;\n  groupsStore: GroupsStore;\n  voicingStore: VoicingStore;\n  preselectionStore: PreselectionStore;\n};\n\nexport class QuizState {\n  props: PropsT;\n  @observable query?: QueryT;\n  @observable nextQuery?: QueryT;\n\n  @facet inputs = new Inputs();\n  @facet outputs = new Outputs();\n\n  clefs = {\n    selection: new Selection(),\n    highlight: new Highlight(),\n  };\n  groups = {\n    selection: new Selection(),\n    highlight: new Highlight(),\n  };\n\n  _setClefsCallbacks(props: PropsT) {\n    const ctr = this.clefs;\n    setCallbacks(ctr.selection, {\n      selectItem: {\n        selectItem(this: SelectionCbs['selectItem']) {\n          handleSelectItem(ctr.selection, this.selectionParams);\n          FacetPolicies.highlightFollowsSelection(\n            ctr.selection,\n            this.selectionParams\n          );\n        },\n      },\n    } as SelectionCbs);\n    setCallbacks(ctr.highlight, {} as HighlightCbs);\n  }\n\n  _setGroupsCallbacks(props: PropsT) {\n    const ctr = this.groups;\n    setCallbacks(ctr.selection, {\n      selectItem: {\n        selectItem(this: SelectionCbs['selectItem']) {\n          handleSelectItem(ctr.selection, this.selectionParams);\n          FacetPolicies.highlightFollowsSelection(\n            ctr.selection,\n            this.selectionParams\n          );\n        },\n      },\n    } as SelectionCbs);\n    setCallbacks(ctr.highlight, {} as HighlightCbs);\n  }\n\n  _applyClefsPolicies(props: PropsT) {\n    const Inputs_items = [Inputs, 'clefs', this] as CMT;\n    const Outputs_display = [Outputs, 'clefsDisplay', this] as CMT;\n\n    const policies = [\n      mapDataToFacet(Outputs_display, getm(Inputs_items)),\n      // selection\n      Facets.selectionUsesSelectableIds(getm(Outputs_display)),\n    ];\n\n    installPolicies(policies, this.clefs);\n  }\n\n  _applyGroupsPolicies(props: PropsT) {\n    const Inputs_items = [Inputs, 'groups', this] as CMT;\n    const Outputs_display = [Outputs, 'groupsDisplay', this] as CMT;\n    const Outputs_itemById = [Outputs, 'groupById', this] as CMT;\n\n    const policies = [\n      mapDataToFacet(Outputs_display, getm(Inputs_items)),\n      // selection\n      Facets.selectionUsesSelectableIds(getm(Outputs_display), getIds),\n      Facets.selectionUsesItemLookUpTable(getm(Outputs_itemById)),\n      // highlight\n      Facets.highlightUsesItemLookUpTable(getm(Outputs_itemById)),\n    ];\n\n    installPolicies(policies, this.groups);\n  }\n\n  destroy() {\n    cleanUpCtr(this.clefs);\n    cleanUpCtr(this.groups);\n  }\n\n  constructor(props: PropsT) {\n    this.props = props;\n\n    registerFacets(this, {});\n    makeObservable(this);\n\n    registerFacets(this.clefs, { name: 'Clefs' });\n    this._setClefsCallbacks(props);\n    this._applyClefsPolicies(props);\n    makeCtrObservable(this.clefs);\n\n    registerFacets(this.groups, { name: 'Groups' });\n    this._setGroupsCallbacks(props);\n    this._applyGroupsPolicies(props);\n    makeCtrObservable(this.groups);\n\n    const cuf = Policies.selectClefBasedOnPreselection()(this);\n    addCleanUpFunctionToCtr(this.clefs, cuf);\n  }\n\n  @action setClefs(clefs: ClefT[]) {\n    this.inputs.clefs = clefs;\n    this.clefs.selection.ids = clefs;\n  }\n\n  @action setGroups(groups: GroupT[]) {\n    this.inputs.groups = groups;\n    this.groups.selection.ids = getIds(groups);\n  }\n\n  @action pickRandomChord() {\n    this.query =\n      this.nextQuery ??\n      createQuery(this.clefs.selection.ids, this.groups.selection.items ?? []);\n\n    this.nextQuery = createQuery(\n      this.clefs.selection.ids,\n      this.groups.selection.items ?? []\n    );\n\n    if (this.query) {\n      this.props.clefStore.setClef(this.query.clef);\n      this.props.voicingStore.setVoicing(this.query.voicing);\n      this.props.voicingStore.setInversion(this.query.inversion);\n    }\n  }\n}\n","import { EventT } from 'src/utils/types';\nimport { QuizState } from 'src/quiz/QuizState';\n\nexport const selectClefBasedOnPreselection = () => (quizState: QuizState) => {\n  const handler = (event: EventT) => {\n    if (quizState.query && event.topic === 'PreselectionStore.selectClef') {\n      quizState.query.clef =\n        event.details.clefLetter +\n        (event.details.isSharpening\n          ? '#'\n          : event.details.isFlattening\n          ? 'b'\n          : '');\n      quizState.props.clefStore.setClef(quizState.query.clef);\n    }\n  };\n\n  quizState.props.preselectionStore.signal.add(handler as any);\n  return () => quizState.props.preselectionStore.signal.remove(handler);\n};\n","export const voicingGroups = [\n  {\n    id: 'minor',\n    name: 'minor',\n    voicings: [\n      {\n        id: 'Min6+9',\n        name: 'Min6+9',\n        chord: ['flat3', 'fifth', 'ninth', 'thirteenth'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: 'Min7+9',\n        name: 'Min7+9',\n        chord: ['flat3', 'fifth', 'flat7', 'ninth'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: 'ø+9',\n        name: 'ø+9',\n        chord: ['flat3', 'flat5', 'flat7', 'ninth'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: 'MinMaj+9',\n        name: 'MinMaj+9',\n        chord: ['flat3', 'fifth', 'seventh', 'ninth'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: 'Min6',\n        name: 'Min6',\n        chord: ['flat3', 'fifth', 'thirteenth'],\n        inversions: [true, true, true],\n      },\n      {\n        id: 'Min7',\n        name: 'Min7',\n        chord: ['flat3', 'fifth', 'flat7'],\n        inversions: [true, true, true],\n      },\n      {\n        id: 'ø',\n        name: 'ø',\n        chord: ['flat3', 'flat5', 'flat7'],\n        inversions: [true, true, true],\n      },\n      {\n        id: 'Min',\n        name: 'Min',\n        chord: ['flat3', 'fifth'],\n        inversions: [true, true],\n      },\n      {\n        id: 'MinMaj',\n        name: 'MinMaj',\n        chord: ['flat3', 'fifth', 'seventh'],\n        inversions: [true, true, true],\n      },\n    ],\n  },\n  {\n    id: 'fourths',\n    name: 'fourths',\n    voicings: [\n      {\n        id: 'SoWhat',\n        name: 'SoWhat',\n        chord: ['root', 'fourth', 'flat7', 'flat3', 'fifth'],\n        inversions: [false, true, false, false, false, false],\n      },\n    ],\n  },\n  {\n    id: 'major',\n    name: 'major',\n    voicings: [\n      {\n        id: 'Maj6+9',\n        name: 'Maj6+9',\n        chord: ['third', 'sixth', 'ninth'],\n        inversions: [true, true, true],\n      },\n      {\n        id: 'Maj7+9',\n        name: 'Maj7+9',\n        chord: ['third', 'fifth', 'seventh', 'ninth'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: 'Maj6',\n        name: 'Maj6',\n        chord: ['third', 'sixth'],\n        inversions: [true, true],\n      },\n      {\n        id: 'Maj7',\n        name: 'Maj7',\n        chord: ['third', 'fifth', 'seventh'],\n        inversions: [true, true, true],\n      },\n      {\n        id: 'Maj',\n        name: 'Maj',\n        chord: ['third', 'fifth'],\n        inversions: [true, true],\n      },\n    ],\n  },\n  {\n    id: 'dominant',\n    name: 'dominant',\n    voicings: [\n      { id: '7+13', name: '7+13', chord: ['third', 'flat7', 'thirteenth'] },\n      {\n        id: '7+9',\n        name: '7+9',\n        chord: ['third', 'fifth', 'flat7', 'ninth'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: '7+b13',\n        name: '7+b13',\n        chord: ['third', 'flat7', 'flat13'],\n        inversions: [true, true, true],\n      },\n      {\n        id: '7+9+b13',\n        name: '7+9+b13',\n        chord: ['third', 'flat7', 'ninth', 'flat13'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: '7+b5',\n        name: '7+b5',\n        chord: ['third', 'flat5', 'flat7'],\n        inversions: [true, true, true],\n      },\n      {\n        id: '7+b5+b13',\n        name: '7+b5+b13',\n        chord: ['third', 'flat5', 'flat7', 'flat13'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: '7+b9',\n        name: '7+b9',\n        chord: ['third', 'fifth', 'flat7', 'flat9'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: '7+b9+13',\n        name: '7+b9+13',\n        chord: ['third', 'thirteenth', 'flat7', 'flat9'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: '7+b9+b13',\n        name: '7+b9+b13',\n        chord: ['third', 'flat13', 'flat7', 'flat9'],\n        inversions: [true, true, true, true],\n      },\n      {\n        id: '7',\n        name: '7',\n        chord: ['third', 'fifth', 'flat7'],\n        inversions: [true, true, true],\n      },\n    ],\n  },\n];\n","import * as React from 'react';\nimport { action, reaction } from 'mobx';\n\nimport { QuizState } from 'src/quiz/QuizState';\nimport { CtrProvider } from 'react-default-props-context';\nimport { useStore } from 'src/app/components';\nimport { voicingGroups } from 'src/voicings/voicingGroups';\nimport { clefs } from 'src/keyboard/keyConstants';\nimport { parseVoicingGroups } from 'src/voicings/parse';\n\ntype PropsT = React.PropsWithChildren<{}>;\n\n// Note: don't observe this with MobX\nexport const QuizStateProvider: React.FC<PropsT> = (props: PropsT) => {\n  const {\n    groupsStore,\n    clefStore,\n    voicingStore,\n    preselectionStore,\n  } = useStore();\n  const groups = parseVoicingGroups(voicingGroups);\n\n  const createState = action(() => {\n    const state = new QuizState({\n      groupsStore,\n      clefStore,\n      voicingStore,\n      preselectionStore,\n    });\n    state.setClefs(clefs);\n    state.setGroups(groups);\n    return state;\n  });\n\n  const updateState = (state: QuizState) => {\n    reaction(\n      () => ({}),\n      (inputs) => {},\n      {\n        fireImmediately: true,\n      }\n    );\n  };\n\n  const getDefaultProps = (state: QuizState) => {\n    return {\n      quizState: () => state,\n      clefs: () => state.outputs.clefsDisplay,\n      clefsSelection: () => state.clefs.selection,\n      clefsHighlight: () => state.clefs.highlight,\n      clef: () => state.clefs.highlight.item,\n      groups: () => state.outputs.groupsDisplay,\n      groupsSelection: () => state.groups.selection,\n      groupsHighlight: () => state.groups.highlight,\n      group: () => state.groups.highlight.item,\n    };\n  };\n\n  return (\n    <CtrProvider\n      createCtr={createState}\n      updateCtr={updateState}\n      destroyCtr={(state: QuizState) => state.destroy()}\n      getDefaultProps={getDefaultProps}\n    >\n      {props.children}\n    </CtrProvider>\n  );\n};\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { createBrowserHistory } from 'history';\nimport { QuizView } from 'src/quiz/components';\nimport { QuizStateProvider } from 'src/quiz/components';\n\ntype PropsT = {};\n\nexport const history = createBrowserHistory();\n\nexport const UrlRouter: React.FC<PropsT> = observer((props: PropsT) => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"\">\n          <QuizStateProvider>\n            <QuizView />\n          </QuizStateProvider>\n        </Route>\n      </Switch>\n    </Router>\n  );\n});\n","import React from 'react';\n\nimport './App.scss';\nimport { UrlRouter } from 'src/app/components/UrlRouter';\n\nexport function App() {\n  return (\n    <div className=\"App w-screen\">\n      <header className=\"App__Header\">\n        <UrlRouter />\n      </header>\n    </div>\n  );\n}\n","import { GroupByIdT } from 'src/groups/types';\nimport { observable, makeObservable } from 'mobx';\n\nexport class GroupsStore {\n  @observable groupById: GroupByIdT = {};\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  loadGroups() {}\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport { Signal } from 'micro-signals';\n\nexport class PreselectionStore {\n  signal = new Signal();\n  clefLetter?: string = undefined;\n  isSharpening?: boolean = undefined;\n  isFlattening?: boolean = undefined;\n\n  constructor() {\n    makeObservable(this, {\n      clefLetter: observable,\n      isSharpening: observable,\n      isFlattening: observable,\n      setClefLetter: action,\n      setIsSharpening: action,\n      setIsFlattening: action,\n      reset: action,\n    });\n  }\n\n  setClefLetter = (x?: string) => (this.clefLetter = x);\n  setIsSharpening = (x?: boolean) => (this.isSharpening = x);\n  setIsFlattening = (x?: boolean) => (this.isFlattening = x);\n\n  reset = () => {\n    if (this.clefLetter) {\n      this.signal.dispatch({\n        topic: 'PreselectionStore.selectClef',\n        details: {\n          clefLetter: this.clefLetter,\n          isSharpening: this.isSharpening,\n          isFlattening: this.isFlattening,\n        },\n      });\n    }\n    this.setIsFlattening(false);\n    this.setIsSharpening(false);\n    this.setClefLetter(undefined);\n  };\n}\n","import { clamp, size } from 'lodash/fp';\nimport { action, computed, makeObservable, observable } from 'mobx';\nimport { invertChord } from 'src/voicings/utils/invertChord';\nimport { voicingToChord } from 'src/voicings/utils/voicingToChord';\nimport { VoicingT } from 'src/voicings/types';\nimport { getInversionRange } from 'src/voicings/utils/invertChord';\nimport { parseVoicing } from 'src/voicings/parse';\n\nconst cScale = parseVoicing({\n  id: 'Chromatic',\n  name: 'Chromatic',\n  chord: [\n    'root',\n    'flat9',\n    'ninth',\n    'flat3',\n    'third',\n    'fourth',\n    'flat5',\n    'fifth',\n    'flat6',\n    'sixth',\n    'flat7',\n    'seventh',\n  ],\n});\n\nexport class VoicingStore {\n  clef: string = 'C';\n  inversion: number = 0;\n  voicing: VoicingT = cScale;\n\n  constructor() {\n    makeObservable(this, {\n      clef: observable,\n      inversion: observable,\n      voicing: observable,\n      chord: computed,\n      nrOfVoices: computed,\n      inversionRange: computed,\n      setInversion: action,\n      setVoicing: action,\n    });\n  }\n\n  setInversion = (x: number) => {\n    this.inversion = clamp(\n      this.inversionRange[0],\n      this.inversionRange[1]\n    )(x) as any;\n  };\n\n  setVoicing = (voicing: VoicingT) => {\n    this.voicing = voicing;\n  };\n\n  get inversionRange() {\n    return getInversionRange(voicingToChord(this.voicing, this.clef, 1));\n  }\n\n  get nrOfVoices() {\n    return size(this.voicing.chord);\n  }\n\n  get chord() {\n    return this.clef\n      ? invertChord(voicingToChord(this.voicing, this.clef, 1), this.inversion)\n      : undefined;\n  }\n}\n","import { action, computed, makeObservable, observable } from 'mobx';\n\nimport { clefC } from 'src/keyboard/keyConstants';\nimport { ClefT } from 'src/keyboard/types';\n\nexport class ClefStore {\n  clefLetter = clefC;\n  clefSharp = false;\n  clefFlat = false;\n\n  constructor() {\n    makeObservable(this, {\n      clefLetter: observable,\n      clefSharp: observable,\n      clefFlat: observable,\n      setClefLetter: action,\n      setClefSharp: action,\n      setClefFlat: action,\n      clef: computed,\n    });\n  }\n\n  setClefLetter = (clefLetter: string) => {\n    this.clefLetter = clefLetter;\n  };\n\n  setClefSharp = (x: boolean) => {\n    this.clefSharp = x;\n    if (x) this.clefFlat = false;\n  };\n\n  setClefFlat = (x: boolean) => {\n    this.clefFlat = x;\n    if (x) this.clefSharp = false;\n  };\n\n  get clef() {\n    return this.clefLetter + (this.clefSharp ? '#' : this.clefFlat ? 'b' : '');\n  }\n\n  setClef(x: ClefT) {\n    const clefLetter = x[0];\n    this.setClefLetter(clefLetter);\n    const modulate = x[1];\n    this.setClefFlat(modulate == 'b');\n    this.setClefSharp(modulate == '#');\n  }\n}\n","import React from 'react';\nimport { AppStore } from 'src/app/AppStore';\n\nconst appStore = new AppStore();\n\nexport const StoreContext = React.createContext<AppStore>(appStore);\n\nexport const StoreProvider: React.FC = ({ children }) => {\n  return (\n    <StoreContext.Provider value={appStore}>\n      {children}\n    </StoreContext.Provider>\n  );\n};","import { observable, makeObservable } from 'mobx';\nimport { GroupsStore } from 'src/groups/GroupsStore';\nimport { PreselectionStore } from 'src/keyboard/PreselectionStore';\nimport { VoicingStore } from 'src/voicings/VoicingStore';\nimport { ClefStore } from 'src/keyboard/ClefStore';\nimport * as Policies from 'src/app/policies';\n\nexport class AppStore {\n  @observable groupsStore: GroupsStore;\n  voicingStore = new VoicingStore();\n  clefStore = new ClefStore();\n  preselectionStore = new PreselectionStore();\n\n  constructor() {\n    makeObservable(this, {\n      voicingStore: observable,\n      clefStore: observable,\n      preselectionStore: observable,\n    });\n    this.groupsStore = new GroupsStore();\n    this.applyPolicies();\n  }\n\n  applyPolicies() {\n    Policies.voicingStoreUsesSelectedClef()(this);\n  }\n}\n","import { reaction } from 'mobx';\nimport { AppStore } from 'src/app/AppStore';\n\nexport const voicingStoreUsesSelectedClef = () => (appStore: AppStore) => {\n  reaction(\n    () => appStore.clefStore.clef,\n    (clef) => {\n      appStore.voicingStore.clef = clef;\n    },\n    { fireImmediately: true }\n  );\n};\n","import React from 'react';\nimport { StoreContext } from 'src/app/components/StoreProvider';\n\nexport const useStore = () => {\n  const store = React.useContext(StoreContext);\n  if (!store) {\n    throw new Error('useStore must be used within a StoreProvider.');\n  }\n  return store;\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'src/app/components';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}